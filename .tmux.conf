
# remap prefix from 'C-b' to 'C-d'
unbind C-b
set-option -g prefix C-d
bind-key C-d send-prefix

set -g default-terminal screen-256color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# start window and pane indexing from 1
set -g base-index 1
setw -g pane-base-index 1

# enable vi keys support
set -g status-keys vi
setw -g mode-keys vi

# increase history limit
set -g history-limit 10000

set -g mouse on
setw -g monitor-activity on

set-option -g focus-events on

# modified split key configuration
bind-key i split-window -h
bind-key - split-window -v

# enable mouse wheel
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# No delay for escape key press
set -sg escape-time 0

# don't rename windows automatically
set-option -g allow-rename off

# key binding to reload tmux config
bind r source-file ~/.tmux.conf

# start zsh when tmux is run
# set-option -g default-shell /usr/bin/zsh

# copy/paste within tmux
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

# copy in linux system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "pbcopy" \;\
  send-keys -X clear-selection

# prevent sticky (repeatable) commands
set-option -g repeat-time 0

# ----------------------
# # set some pretty colors
# # ----------------------

# set-option -g pane-border-fg colour240 #base02
set-option -g pane-active-border-style fg=colour240 #base01

# colorize messages in the command line
set-option -g message-style bg=black #base02
set-option -g message-style fg=red #orange

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
#set-option -g status-style bg="#282828"
#set-option -g status-style fg=yellow #yellow
set-option -g status-style dim

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-style fg=brightblue #base0
set-window-option -g window-status-style bg="#282828"
set-window-option -g window-status-style dim

set-window-option -g window-status-current-style fg=red #orange
set-window-option -g window-status-current-style bg="#282828"
set-window-option -g window-status-current-style bright

# left side
set -g status-left-length 30
set -g status-left "#[fg=blue] [#S] #I:#P" # session-number, window and pane

# disable right hand side
set -g status-right-length 0
